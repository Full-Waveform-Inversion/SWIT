# Which kind of Fortran Compiler to use, gnu or ibm ?
compiler = gnu

# Compilation option
__MPI = yes
__OMP = no


DIR_OBJ=.obj
DIR_MOD=.mod
DIR_EXE=bin


# GNU Fortran Compiler
ifeq (${compiler},gnu)
  # Use MPI?
  ifeq (${__MPI},yes)
     FCC = mpif90
#      FCC = /usr/local/openmpi/bin/mpif90
  else
    FCC = f95
  endif

  # Use OpenMP?
  ifeq (${__OMP},yes)
    FLAGOMP = -fopenmp
  else
    FLAGOMP =
  endif

  # -c: compile to obj files
  # -w:	Inhibit all warning messages
  # -O3: Level 3 Optimization
  # -funroll-loops: Improves performance on code using iterative DO loops by unrolling them
  # -Jdir: Specifies where to put .mod files for compiled modules (default is -J./ )
  F90FLAGS =-O3 -w $(FLAGOMP) -c -funroll-loops -J$(DIR_MOD)
  LDFLAGS  =-O3 -w $(FLAGOMP) 
endif


# INTEL Fortran Compiler
ifeq (${compiler},intel)
  # Use MPI?
  ifeq (${__MPI},yes)
    FCC = mpif90
  else
    FCC = ifort
  endif

  # Use OpenMP?
  ifeq (${__OMP},yes)
    FLAGOMP = -openmp
  else
    FLAGOMP =
  endif

  F90FLAGS =-O3 -w $(FLAGOMP) -c -xP -fpp -fno-fnalias -fno-alias -ip -fomit-frame-pointer -ftz -assume byterecl -module $(DIR_MOD)
  LDFLAGS  =-O3 -w $(FLAGOMP) 
endif


# IBM Fortran Compiler
ifeq (${compiler},ibm)
  # Use MPI?
  ifeq (${__MPI},yes)
    FCC = mpixlf90
    ifeq (${__OMP},yes)
      FCC = mpixlf90_r
    endif
  else
    FCC = f95
  endif

  # Use OpenMP?
  ifeq (${__OMP},yes)
    FLAGOMP = -qsmp=noauto:omp
  else
    FLAGOMP =
  endif

  F90FLAGS =-O3 -u -qunroll=yes $(FLAGOMP) -qarch=450d -qtune=450 -c -qmoddir=$(DIR_MOD) -I$(DIR_MOD)
  LDFLAGS  =-O3 -u -qunroll=yes $(FLAGOMP) -qarch=450d -qtune=450
endif

